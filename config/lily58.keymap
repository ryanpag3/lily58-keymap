/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp EQUAL &kp GT>;
            label = "ARROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC                     &kp N1  &kp N2  &kp N3                  &kp N4              &kp N5                                 &kp N6  &kp N7               &kp N8               &kp N9   &kp N0    &kp BACKSPACE
&lt 2 TAB                   &kp Q   &kp W   &kp E                   &kp R               &kp T                                  &kp Y   &kp U                &kp I                &kp O    &kp P     &lt 2 MINUS
&kp GRAVE                   &kp A   &kp S   &kp D                   &kp F               &kp G                                  &kp H   &kp J                &kp K                &kp L    &kp SEMI  &kp ENTER
&mt LSHFT LEFT_PARENTHESIS  &kp Z   &kp X   &kp C                   &kp V               &kp B   &kp LCTRL    &kp SINGLE_QUOTE  &kp N   &kp M                &kp COMMA            &kp DOT  &kp FSLH  &mt RSHFT RIGHT_PARENTHESIS
                                            &mt LEFT_ALT BACKSPACE  &mt LEFT_GUI ENTER  &mo 1   &kp SPACE    &kp SPACE         &mo 1   &mt RIGHT_GUI ENTER  &mt RIGHT_ALT EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_symbols {
            bindings = <
&trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                    &kp HOME       &bt BT_CLR            &trans                 &kp C_PLAY_PAUSE  &kp C_PREVIOUS   &kp C_NEXT
&trans        &kp LA(LEFT)  &trans        &trans        &kp LA(RIGHT)  &trans                          &kp PAGE_UP    &trans                &trans                 &trans            &kp PRINTSCREEN  &kp DOUBLE_QUOTES
&trans        &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT      &trans                          &kp PAGE_DOWN  &kp LEFT              &kp DOWN               &kp UP_ARROW      &kp RIGHT        &kp SINGLE_QUOTE
&kp CAPSLOCK  &kp LBKT      &kp RBKT      &kp LS(LBRC)  &kp LS(RBRC)   &arrow        &trans    &trans  &kp END        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans            &kp BACKSLASH    &kp CAPSLOCK
                                          &trans        &trans         &trans        &trans    &trans  &trans         &trans                &trans
            >;
        };

        fn_num_bluetooth {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                     &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &trans
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10                    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15                    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &trans
&trans  &trans   &trans   &trans   &trans   &trans   &trans    &trans  &trans  &trans           &kp KP_NUMBER_0  &trans           &kp KP_SLASH  &trans
                          &trans   &trans   &trans   &trans    &trans  &trans  &trans           &trans
            >;
        };
    };
};
